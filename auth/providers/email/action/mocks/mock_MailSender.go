// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockMailSender is an autogenerated mock type for the MailSender type
type MockMailSender struct {
	mock.Mock
}

type MockMailSender_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMailSender) EXPECT() *MockMailSender_Expecter {
	return &MockMailSender_Expecter{mock: &_m.Mock}
}

// ResetPasswordEmail provides a mock function with given fields: ctx, to, resetPasswordLink
func (_m *MockMailSender) ResetPasswordEmail(ctx context.Context, to string, resetPasswordLink string) error {
	ret := _m.Called(ctx, to, resetPasswordLink)

	if len(ret) == 0 {
		panic("no return value specified for ResetPasswordEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, to, resetPasswordLink)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockMailSender_ResetPasswordEmail_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ResetPasswordEmail'
type MockMailSender_ResetPasswordEmail_Call struct {
	*mock.Call
}

// ResetPasswordEmail is a helper method to define mock.On call
//   - ctx context.Context
//   - to string
//   - resetPasswordLink string
func (_e *MockMailSender_Expecter) ResetPasswordEmail(ctx interface{}, to interface{}, resetPasswordLink interface{}) *MockMailSender_ResetPasswordEmail_Call {
	return &MockMailSender_ResetPasswordEmail_Call{Call: _e.mock.On("ResetPasswordEmail", ctx, to, resetPasswordLink)}
}

func (_c *MockMailSender_ResetPasswordEmail_Call) Run(run func(ctx context.Context, to string, resetPasswordLink string)) *MockMailSender_ResetPasswordEmail_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockMailSender_ResetPasswordEmail_Call) Return(_a0 error) *MockMailSender_ResetPasswordEmail_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMailSender_ResetPasswordEmail_Call) RunAndReturn(run func(context.Context, string, string) error) *MockMailSender_ResetPasswordEmail_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMailSender creates a new instance of MockMailSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMailSender(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMailSender {
	mock := &MockMailSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
